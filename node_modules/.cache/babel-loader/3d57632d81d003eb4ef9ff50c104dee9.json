{"ast":null,"code":"var _jsxFileName = \"/home/helen/Documents/Projects/React/goit-react-hw-02-feedback/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Section from \"./components/Statistics/Section \";\nimport FeedbackOptions from \"./components/Statistics/FeedbackOptions\";\nimport Statistics from './components/Statistics/Statistics';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0,\n      total: 0,\n      persentage: 0\n    };\n\n    this.heandleGoodFeedback = opt => {\n      this.setState(prevState => ({\n        [opt]: prevState[opt] + 1\n      }));\n      this.countTotalFeedback();\n      this.countPositiveFeedbackPercentage();\n    };\n\n    this.heandleNeutralFeedback = () => {\n      this.setState(prevState => ({\n        neutral: prevState.neutral + 1\n      }));\n      this.countTotalFeedback();\n      this.countPositiveFeedbackPercentage();\n    };\n\n    this.heandleBadFeedback = () => {\n      this.setState(prevState => ({\n        bad: prevState.bad + 1\n      }));\n      this.countTotalFeedback();\n      this.countPositiveFeedbackPercentage();\n    };\n\n    this.countTotalFeedback = () => {\n      this.setState(prevState => ({\n        total: prevState.total + 1\n      }));\n    };\n\n    this.countPositiveFeedbackPercentage = () => {\n      this.setState(state => {\n        return {\n          persentage: state.good * 100 / state.total\n        };\n      });\n    };\n  }\n\n  render() {\n    const {\n      good,\n      neutral,\n      bad,\n      total,\n      persentage\n    } = this.state;\n    const persentageOfFeedback = Math.round(persentage);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Section, {\n        title: \"Please leave feedback\",\n        children: /*#__PURE__*/_jsxDEV(FeedbackOptions, {\n          options: ['good', 'neutral', 'bad'],\n          heandleGoodFeedback: () => this.heandleGoodFeedback(),\n          heandleBadFeedback: this.heandleBadFeedback,\n          heandleNeutralFeedback: this.heandleNeutralFeedback\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        title: \"Statistics\",\n        children: /*#__PURE__*/_jsxDEV(Statistics, {\n          good: good,\n          neutral: neutral,\n          bad: bad,\n          total: total,\n          positiveFeedback: persentageOfFeedback\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/helen/Documents/Projects/React/goit-react-hw-02-feedback/src/App.js"],"names":["React","Component","Section","FeedbackOptions","Statistics","App","state","good","neutral","bad","total","persentage","heandleGoodFeedback","opt","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","heandleNeutralFeedback","heandleBadFeedback","render","persentageOfFeedback","Math","round"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport './App.css';\n\nimport Section from \"./components/Statistics/Section \";\nimport FeedbackOptions from \"./components/Statistics/FeedbackOptions\";\nimport Statistics from './components/Statistics/Statistics'\n\nclass App extends Component {\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n    total: 0,\n    persentage: 0\n  }\n\n  heandleGoodFeedback = (opt) => {\n    this.setState(prevState => ({\n      [opt]: prevState.[opt] + 1,\n    }))\n    this.countTotalFeedback()\n    this.countPositiveFeedbackPercentage()\n  }\n\n  heandleNeutralFeedback = () => {\n    this.setState(prevState => ({\n      neutral: prevState.neutral + 1,\n    }))\n    this.countTotalFeedback()\n    this.countPositiveFeedbackPercentage()\n\n  }\n  heandleBadFeedback = () => {\n    this.setState(prevState => ({\n      bad: prevState.bad + 1,\n    }))\n    this.countTotalFeedback()\n    this.countPositiveFeedbackPercentage()\n\n  }\n\n  countTotalFeedback = () => {\n    this.setState(prevState => ({\n      total: prevState.total + 1\n    }))\n  }\n\n  countPositiveFeedbackPercentage = () => {\n    this.setState((state) => {\n      return { persentage: state.good * 100 / state.total }\n    })\n  }\n\n  render() {\n    const { good, neutral, bad, total, persentage } = this.state;\n    const persentageOfFeedback = Math.round(persentage);\n\n    return (\n      <div className=\"App\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions options={['good', 'neutral', 'bad']}\n            heandleGoodFeedback={() => this.heandleGoodFeedback()}\n            heandleBadFeedback={this.heandleBadFeedback}\n            heandleNeutralFeedback={this.heandleNeutralFeedback} />\n        </Section>\n        <Section title=\"Statistics\">\n          <Statistics good={good} neutral={neutral} bad={bad} total={total} positiveFeedback={persentageOfFeedback} />\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}